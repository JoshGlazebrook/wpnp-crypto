var wpnp = require('../lib/wpnp-crypto');
var net = require('net');

var key = wpnp.createCryptKeyBlock(0x58);
var buff = new Buffer([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);

var serverupkey = wpnp.getCryptKey(key, false);
var serverdownkey = wpnp.getCryptKey(key, true);

var clientupkey = wpnp.getCryptKey(key, true);
var clientdownkey = wpnp.getCryptKey(key, false);


/*
 var socket = new net.Socket();

 socket.on('error', function (err) {
 console.log(err);
 });

 socket.on('close', function () {
 console.log('close');
 });

 socket.once('data', function (data) {
 console.log(data);
 console.log(data.length);
 data = data.slice(17);
 console.log(data);

 data = wpnp.decryptCacheResponse(data);
 console.log(data);


 for (var i = 0; i < 120; i += 12) {
 console.log(i);
 var node = {
 ipaddress: data.readUInt32BE(i),
 udpport: data.readUInt16LE(i + 4),
 tcpport: data.readUInt16LE(i + 6),
 freeprimaries: data.readUInt8(i + 8),
 freesecondaries: data.readUInt8(i + 9),
 flags: data.readUInt16LE(i + 10)
 };

 console.log(node);
 }

 });

 socket.connect(7950, "cache2.winmxworld.net", function () {
 console.log('connected');
 });*/


var encryptedREAL = new Buffer([0xd5, 0xd8, 0x49, 0x0, 0x5e, 0xc7, 0xa9, 0x2c, 0x78, 0x80, 0x5e, 0x84, 0x4c, 0xc9, 0x17, 0x9c, 0x2f, 0xdf, 0x82, 0x46, 0x7d, 0x85, 0x5e, 0x84, 0x48, 0x77, 0x1b, 0xf7, 0x33, 0x1d, 0x89, 0xc, 0xa2, 0xf, 0xc4, 0xdb, 0x37, 0xf, 0x27, 0xc4, 0x4c, 0x3c, 0x4a, 0xc0, 0x65, 0x56, 0x9f, 0x6b, 0xa, 0x23, 0x42, 0xcc, 0x80, 0xf0, 0x3c, 0xb3, 0xa2, 0xa4, 0x1d, 0x5d, 0xc9, 0x58, 0xe9, 0x49, 0x2b, 0x6d, 0x1, 0xf4, 0x62, 0xb6, 0xc0, 0xe1, 0x21, 0xae, 0xf1, 0x42, 0x1e, 0x46, 0xb5, 0xad, 0xe8, 0x6e, 0x3d, 0x99, 0x74, 0x55, 0xe3, 0x10, 0x8f, 0x89, 0x5f, 0xba, 0xbc, 0xca, 0x56, 0xef, 0x76, 0x6c, 0x46, 0xae, 0xb6, 0x6e, 0x99, 0xa6, 0xb8, 0x6d, 0xb4, 0xdc, 0x4e, 0x9d, 0x53, 0x13, 0xb7, 0x54, 0x4c, 0x72, 0x43, 0xd8, 0x2, 0xb4, 0x90, 0x68, 0xe, 0xcc, 0x38, 0x31, 0xa1, 0x42, 0x65, 0xcd, 0xec, 0x4]);
var decryptedREAL = new Buffer([0x77, 0xf1, 0x5e, 0x9c, 0x71, 0x18, 0x2b, 0x1a, 0x05, 0x05, 0x00, 0x00, 0x76, 0x09, 0x06, 0x5b, 0xd6, 0xd7, 0xc3, 0xf4, 0x02, 0x04, 0x00, 0x00, 0x79, 0x5d, 0x65, 0xe8, 0x58, 0x1b, 0x70, 0x17, 0x04, 0x04, 0x00, 0x00, 0x7d, 0x1f, 0x74, 0xfe, 0x71, 0x18, 0x2b, 0x1a, 0x06, 0x07, 0x00, 0x00, 0x57, 0x12, 0x5e, 0x72, 0x71, 0x18, 0x2b, 0x1a, 0x03, 0x04, 0x00, 0x00, 0x7d, 0xad, 0x51, 0x2d, 0xa5, 0x19, 0xa5, 0x19, 0x01, 0x04, 0x00, 0x00, 0x31, 0x81, 0xe6, 0x64, 0x71, 0x18, 0x2b, 0x1a, 0x02, 0x04, 0x00, 0x00, 0x3d, 0x59, 0x22, 0x86, 0x71, 0x18, 0x2b, 0x1a, 0x02, 0x04, 0x00, 0x00, 0xdb, 0x6c, 0x81, 0x0e, 0x71, 0x18, 0x2b, 0x1a, 0x05, 0x07, 0x00, 0x00, 0x18, 0xe7, 0xba, 0x90, 0x71, 0x18, 0x2b, 0x1a, 0x01, 0x04, 0x00, 0x00]);


for(i = 0; i < 1000; i++ ) {
var gkey = wpnp.createGenacKey();
console.log(gkey);
console.log(wpnp.verifyGenacKey(gkey))
}